-- MySQL Script generated by MySQL Workbench
-- Tue Mar 12 18:48:46 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tour_agency
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tour_agency` ;

CREATE SCHEMA IF NOT EXISTS `tour_agency` DEFAULT CHARACTER SET latin1 ;
USE `tour_agency` ;

-- -----------------------------------------------------
-- Table `tour_agency`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`country` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`country` (
  `country_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `area` DOUBLE NOT NULL,
  `population` INT NOT NULL,
  `created_at` DATE NULL,
  `description` MEDIUMTEXT NULL,
  PRIMARY KEY (`country_id`),
  UNIQUE INDEX `country_id_UNIQUE` (`country_id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`city`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`city` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`city` (
  `city_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `population` INT NOT NULL,
  `area` DOUBLE NOT NULL,
  `description` MEDIUMTEXT NULL,
  `image` MEDIUMTEXT NULL,
  `country_id` INT NOT NULL,
  `created_at` DATE NULL,
  PRIMARY KEY (`city_id`),
  INDEX `fk_city_country1_idx` (`country_id` ASC) ,
  UNIQUE INDEX `city_id_UNIQUE` (`city_id` ASC) ,
  CONSTRAINT `fk_city_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `tour_agency`.`country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`address` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`address` (
  `address_id` INT NOT NULL,
  `street` VARCHAR(255) NULL,
  `house` INT NULL,
  `city_id` INT NOT NULL,
  PRIMARY KEY (`address_id`),
  INDEX `fk_address_city_idx` (`city_id` ASC) ,
  UNIQUE INDEX `address_id_UNIQUE` (`address_id` ASC) ,
  CONSTRAINT `fk_address_city`
    FOREIGN KEY (`city_id`)
    REFERENCES `tour_agency`.`city` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `tour_agency` ;

-- -----------------------------------------------------
-- Table `tour_agency`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`language` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`language` (
  `language_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`language_id`),
  UNIQUE INDEX `language_id_UNIQUE` (`language_id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`language_has_country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`language_has_country` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`language_has_country` (
  `language_id` INT NOT NULL,
  `country_id` INT NOT NULL,
  `speakers` INT NULL,
  INDEX `fk_language_has_country_country1_idx` (`country_id` ASC) ,
  INDEX `fk_language_has_country_language_idx` (`language_id` ASC) ,
  CONSTRAINT `fk_language_has_country_language`
    FOREIGN KEY (`language_id`)
    REFERENCES `tour_agency`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_language_has_country_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `tour_agency`.`country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`river`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`river` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`river` (
  `river_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NULL,
  `length` DOUBLE NOT NULL,
  `image` MEDIUMTEXT NULL,
  PRIMARY KEY (`river_id`),
  UNIQUE INDEX `river_id_UNIQUE` (`river_id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`country_has_river`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`country_has_river` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`country_has_river` (
  `country_id` INT NOT NULL,
  `river_id` INT NOT NULL,
  `length_in_country` DOUBLE NOT NULL,
  INDEX `fk_country_has_river_river1_idx` (`river_id` ASC) ,
  INDEX `fk_country_has_river_country1_idx` (`country_id` ASC) ,
  CONSTRAINT `fk_country_has_river_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `tour_agency`.`country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_country_has_river_river1`
    FOREIGN KEY (`river_id`)
    REFERENCES `tour_agency`.`river` (`river_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`lake`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`lake` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`lake` (
  `lake_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `area` DOUBLE NOT NULL,
  `description` MEDIUMTEXT NULL,
  `image` MEDIUMTEXT NULL,
  PRIMARY KEY (`lake_id`),
  UNIQUE INDEX `lake_id_UNIQUE` (`lake_id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`lake_has_country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`lake_has_country` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`lake_has_country` (
  `lake_id` INT NOT NULL,
  `country_id` INT NOT NULL,
  INDEX `fk_lake_has_country_country1_idx` (`country_id` ASC) ,
  INDEX `fk_lake_has_country_lake1_idx` (`lake_id` ASC) ,
  CONSTRAINT `fk_lake_has_country_lake1`
    FOREIGN KEY (`lake_id`)
    REFERENCES `tour_agency`.`lake` (`lake_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lake_has_country_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `tour_agency`.`country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`sights`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`sights` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`sights` (
  `sights_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATE NULL,
  `image` MEDIUMTEXT NULL,
  `description` MEDIUMTEXT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`sights_id`),
  UNIQUE INDEX `sights_id_UNIQUE` (`sights_id` ASC) ,
  INDEX `fk_sights_address1_idx` (`address_id` ASC) ,
  CONSTRAINT `fk_sights_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `tour_agency`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`museum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`museum` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`museum` (
  `museum_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `opens_at` TIME NULL,
  `closes_at` TIME NULL,
  `description` MEDIUMTEXT NULL,
  `image` MEDIUMTEXT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`museum_id`),
  UNIQUE INDEX `museum_id_UNIQUE` (`museum_id` ASC) ,
  INDEX `fk_museum_address1_idx` (`address_id` ASC) ,
  CONSTRAINT `fk_museum_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `tour_agency`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`theatre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`theatre` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`theatre` (
  `theatre_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NULL,
  `image` MEDIUMTEXT NULL,
  `opens_at` TIME NULL,
  `closes_at` TIME NULL,
  `phone` MEDIUMTEXT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`theatre_id`),
  UNIQUE INDEX `theatre_id_UNIQUE` (`theatre_id` ASC) ,
  INDEX `fk_theatre_address1_idx` (`address_id` ASC) ,
  CONSTRAINT `fk_theatre_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `tour_agency`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`restourant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`restourant` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`restourant` (
  `restourant_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `opens_at` TIME NULL,
  `closes_at` TIME NULL,
  `rate` DOUBLE NULL,
  `description` MEDIUMTEXT NULL,
  `phone` MEDIUMTEXT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`restourant_id`),
  UNIQUE INDEX `restourant_id_UNIQUE` (`restourant_id` ASC) ,
  INDEX `fk_restourant_address1_idx` (`address_id` ASC) ,
  CONSTRAINT `fk_restourant_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `tour_agency`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`hotel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`hotel` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`hotel` (
  `hotel_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `rate` DOUBLE NULL,
  `description` MEDIUMTEXT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`hotel_id`),
  UNIQUE INDEX `hotel_id_UNIQUE` (`hotel_id` ASC) ,
  INDEX `fk_hotel_address1_idx` (`address_id` ASC) ,
  CONSTRAINT `fk_hotel_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `tour_agency`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`distance_between_cities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`distance_between_cities` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`distance_between_cities` (
  `city_city_id` INT NOT NULL,
  `city_city_id1` INT NOT NULL,
  `distance` DOUBLE NOT NULL,
  INDEX `fk_city_has_city_city2_idx` (`city_city_id1` ASC) ,
  INDEX `fk_city_has_city_city1_idx` (`city_city_id` ASC) ,
  CONSTRAINT `fk_city_has_city_city1`
    FOREIGN KEY (`city_city_id`)
    REFERENCES `tour_agency`.`city` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_city_has_city_city2`
    FOREIGN KEY (`city_city_id1`)
    REFERENCES `tour_agency`.`city` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`play`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`play` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`play` (
  `play_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NULL,
  PRIMARY KEY (`play_id`),
  UNIQUE INDEX `play_id_UNIQUE` (`play_id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tour_agency`.`play_has_theatre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tour_agency`.`play_has_theatre` ;

CREATE TABLE IF NOT EXISTS `tour_agency`.`play_has_theatre` (
  `play_id` INT NOT NULL,
  `theatre_id` INT NOT NULL,
  `starts_at` DATE NULL,
  `ends_at` DATE NULL,
  `language_id` INT NOT NULL,
  INDEX `fk_play_has_theatre_theatre1_idx` (`theatre_id` ASC) ,
  INDEX `fk_play_has_theatre_play1_idx` (`play_id` ASC) ,
  CONSTRAINT `fk_play_has_theatre_play1`
    FOREIGN KEY (`play_id`)
    REFERENCES `tour_agency`.`play` (`play_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_play_has_theatre_theatre1`
    FOREIGN KEY (`theatre_id`)
    REFERENCES `tour_agency`.`theatre` (`theatre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_play_has_theatre_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `tour_agency`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- INSERT STATMENTS FOR country TABLE
-- -----------------------------------------------------
INSERT INTO country(country_id, name, area, population, created_at, description) VALUES (1, 'Russia', 17000000, 155000000, '1991-12-29', 'Very good city');
INSERT INTO country(country_id, name, area, population, created_at, description) VALUES (2, 'France', 643801, 67120000, '1789-07-14', 'Nice country');
INSERT INTO country(country_id, name, area, population, created_at, description) VALUES (3, 'Germany', 357386, 82790000, '1990-10-03', 'Interesting country');
INSERT INTO country(country_id, name, area, population, created_at, description) VALUES (4, 'Canada', 9984670, 36048521, '1867-07-01', 'Wonderful country');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR city TABLE
-- -----------------------------------------------------
INSERT INTO city(city_id, name, population, area, description, image, country_id, created_at) VALUE (1, 'Saint Petersburg', 7000000, 1, 'Very good city','image',1,'1703-01-01');
INSERT INTO city(city_id, name, population, area, description, image, country_id, created_at) VALUE (2, 'Moscow', 11000000, 2511, 'Not bad city','image',1,'1147-01-01');
INSERT INTO city(city_id, name, population, area, description, image, country_id, created_at) VALUE (3, 'Paris', 2200000, 105.4, 'Fine city','image',2,'0000-00-00');
INSERT INTO city(city_id, name, population, area, description, image, country_id, created_at) VALUE (4, 'Berlin', 3611222, 891.12, 'Boring city','image',3,'1244-01-26');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR distance_between_cities TABLE
-- -----------------------------------------------------
INSERT INTO distance_between_cities(city_city_id, city_city_id1, distance) VALUE (1, 2, 713.9);
INSERT INTO distance_between_cities(city_city_id, city_city_id1, distance) VALUE (1, 4, 1736.1);
INSERT INTO distance_between_cities(city_city_id, city_city_id1, distance) VALUE (3, 4, 1053.9);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR lake TABLE
-- -----------------------------------------------------
INSERT INTO lake(lake_id, name, area, description, image) VALUE (1, 'Baikal', 560000, 'The best lake', 'image');
INSERT INTO lake(lake_id, name, area, description, image) VALUE (2, 'Constance', 536, 'Nice lake', 'image');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR lake_has_country TABLE
-- -----------------------------------------------------
INSERT INTO lake_has_country(lake_id, country_id) VALUE (1,1);
INSERT INTO lake_has_country(lake_id, country_id) VALUE (2,3);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR river TABLE
-- -----------------------------------------------------
INSERT INTO river(river_id, name, description, length, image) VALUE (1,'Volga', 'Long river', 3530,'image');
INSERT INTO river(river_id, name, description, length, image) VALUE (2,'Rhine', 'Nice river', 1230,'image');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR country_has_river TABLE
-- -----------------------------------------------------
INSERT INTO country_has_river(country_id, river_id, length_in_country) VALUE (1,1,3530);
INSERT INTO country_has_river(country_id, river_id, length_in_country) VALUE (2,2,188);
INSERT INTO country_has_river(country_id, river_id, length_in_country) VALUE (3,2,653);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR language TABLE
-- -----------------------------------------------------
INSERT INTO language(language_id, name) VALUE (1,'Russian');
INSERT INTO language(language_id, name) VALUE (2,'German');
INSERT INTO language(language_id, name) VALUE (3,'French');
INSERT INTO language(language_id, name) VALUE (4,'English');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR language_has_country TABLE
-- -----------------------------------------------------
INSERT INTO language_has_country(language_id, country_id, speakers) VALUE (1,1,155000000);
INSERT INTO language_has_country(language_id, country_id, speakers) VALUE (2,3,82790000);
INSERT INTO language_has_country(language_id, country_id, speakers) VALUE (3,2,67120000);
INSERT INTO language_has_country(language_id, country_id, speakers) VALUE (4,4,30713340);
INSERT INTO language_has_country(language_id, country_id, speakers) VALUE (3,4,11175041);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR address TABLE
-- -----------------------------------------------------
INSERT INTO address(address_id, street, house, city_id) VALUE (1, 'Nevskiy avenue', 12, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (2, 'Nevskiy avenue', 33, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (3, 'Universitetskaya embankment', 10, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (4, 'Universitetskaya embankment', 13, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (5, 'Universitetskaya embankment', 24, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (6, 'Universitetskaya embankment', 7, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (7, 'Dvortsovaya embankment', 4, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (8, 'Dvortsovaya embankment', 23, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (9, 'Dvortsovaya embankment', 7, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (10, 'Liteiny avenue', 3, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (11, 'Liteiny avenue', 15, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (12, 'Liteiny avenue', 13, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (13, 'Liteiny avenue', 40, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (14, 'Belinskogo street', 1, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (15, 'Belinskogo street', 10, 1);
INSERT INTO address(address_id, street, house, city_id) VALUE (16, 'Leninskiy avenue', 12, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (17, 'Leninskiy avenue', 11, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (18, 'Leninskiy avenue', 13, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (19, 'Leninskiy avenue', 14, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (20, 'Tverskaya street', 1, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (21, 'Tverskaya street', 2, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (22, 'Tverskaya street', 3, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (23, 'Tverskaya street', 4, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (24, 'Kalinin avenue', 5, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (25, 'Kalinin avenue', 6, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (26, 'Kalinin avenue', 7, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (27, 'Kalinin avenue', 8, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (28, 'Kalinin avenue', 9, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (29, 'Kalinin avenue', 10, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (30, 'Kalinin avenue', 11, 2);
INSERT INTO address(address_id, street, house, city_id) VALUE (31, 'Rue Saint-Jacques', 12, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (32, 'Rue Saint-Jacques', 13, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (33, 'Rue Saint-Jacques', 14, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (34, 'Rue Saint-Jacques', 15, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (35, 'Rue Saint-Jacques', 16, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (36, 'Boulevard Saint-Germain', 17, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (37, 'Boulevard Saint-Germain', 18, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (38, 'Boulevard Saint-Germain', 19, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (39, 'Boulevard Saint-Germain', 20, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (40, 'Boulevard Saint-Germain', 21, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (41, 'Boulevard Saint-Michel', 22, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (42, 'Boulevard Saint-Michel', 23, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (43, 'Boulevard Saint-Michel', 24, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (44, 'Boulevard Saint-Michel', 25, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (45, 'Boulevard Saint-Michel', 26, 3);
INSERT INTO address(address_id, street, house, city_id) VALUE (46, 'Spandauer Straße', 27, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (47, 'Spandauer Straße', 28, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (48, 'Spandauer Straße', 29, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (49, 'Spandauer Straße', 30, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (50, 'Brückenstraße', 31, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (51, 'Brückenstraße', 32, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (52, 'Brückenstraße', 33, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (53, 'Brückenstraße', 34, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (54, 'Brückenstraße', 35, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (55, 'Brückenstraße', 36, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (56, 'Neue Roßstraße', 37, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (57, 'Neue Roßstraße', 38, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (58, 'Neue Roßstraße', 39, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (59, 'Neue Roßstraße', 40, 4);
INSERT INTO address(address_id, street, house, city_id) VALUE (60, 'Neue Roßstraße', 41, 4);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR sights TABLE
-- -----------------------------------------------------
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (1,'Rostral column','1810-01-01', 'image', 'Nice sight', 2);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (2,'Brandenburg Gate','1791-01-01', 'image', 'Nice sight', 55);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (3,'Bronze Horseman','1785-08-13', 'image', 'Nice sight', 4);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (4,'Gendarmenmarkt','1635-04-16', 'image', 'Nice sight', 56);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (5,'Kurfürstendamm','1980-12-05', 'image', 'Nice sight', 57);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (6,'Potsdamer Platz','1989-05-03', 'image', 'Nice sight', 46);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (7,'Eiffel Tower','1905-09-04', 'image', 'Nice sight', 33);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (8,'Jardin des Tuileries','1955-11-17', 'image', 'Nice sight', 36);
INSERT INTO sights(sights_id, name, created_at, image, description, address_id) VALUE (9,'Arc de Triomphe','1820-08-13', 'image', 'Nice sight', 40);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR museum TABLE
-- -----------------------------------------------------
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (1,'The Hermitage (The Winter Palace)','10:00:00','18:00:00','Nice museum', 'image', 3);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (2,'St. Isaac''s Cathedral & Colonnade','11:00:00','17:00:00','Nice museum', 'image', 6);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (3,'The Peter & Paul Fortress','09:30:00','17:45:00','Nice museum', 'image', 10);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (4,'Church of Our Saviour on Spilled Blood','10:00:00','18:00:00','Nice museum', 'image', 15);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (5,'State Russian Museum','11:00:00','18:00:00','Nice museum', 'image', 11);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (6,'The Kunstkammer','10:00:00','17:00:00','Nice museum', 'image', 5);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (7,'ST BASIL''S CATHEDRAL','11:00:00','17:00:00','Nice museum', 'image', 20);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (8,'STATE HISTORICAL MUSEUM','09:00:00','21:00:00','Nice museum', 'image', 26);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (9,'TRETYAKOV GALLERY','09:00:00','21:00:00','Nice museum', 'image', 30);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (10,'Paris art museum','09:00:00','21:00:00','Nice museum', 'image', 39);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (11,'Paris scince museum','09:00:00','18:00:00','Nice museum', 'image', 41);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (12,'Paris trains museum','11:00:00','17:00:00','Nice museum', 'image', 45);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (13,'Paris stones museum','12:00:00','13:00:00','Nice museum', 'image', 34);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (14,'Berlin weapon museum','04:00:00','21:00:00','Nice museum', 'image', 58);
INSERT INTO museum(museum_id, name, opens_at, closes_at, description, image, address_id) VALUE (15,'Berlin politic museum','10:00:00','18:00:00','Nice museum', 'image', 60);

-- -----------------------------------------------------
-- INSERT STATMENTS FOR restourant TABLE
-- -----------------------------------------------------
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (1,'Saint Petersburg national meal restourant', 3,'04:00:00','21:00:00', 5.0, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (2,'Joe''s food', 14,'12:00:00','16:00:00', 3.0, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (3,'Moscow food', 29,'11:00:00','23:00:00', 4.9, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (4,'Crappy meal', 22,'10:00:00','17:00:00', 3.9, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (5,'Frog''s legs', 42,'16:00:00','23:00:00', 5.0, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (6,'Snail shell', 35,'03:00:00','10:00:00', 2.0, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (7,'Long sausages', 59,'10:00:00','23:00:00', 5.0, 'Nice restourant', 'phone');
INSERT INTO restourant(restourant_id, name, address_id, opens_at, closes_at, rate, description, phone) VALUE (8,'Strong beer and sauerkraut', 60,'17:00:00','04:00:00', 1.0, 'Nice restourant', 'phone');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR hotel TABLE
-- -----------------------------------------------------
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (1,'Only for the Emperor', 1, 5.0, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (2,'The best sight on bridges', 7, 1.0, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (3,'Near Lenin', 19, 4.3, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (4,'It''s Moscow too', 24, 3.3, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (5,'The best bed in all Paris', 44, 1.3, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (6,'Stay if you want', 31, 4.3, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (7,'Lebe wenn du kein Araber', 50, 5.0, 'Nice hotel');
INSERT INTO hotel(hotel_id, name, address_id, rate, description) VALUE (8,'Geruhsame Nacht', 54, 1.0, 'Nice hotel');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR theatre TABLE
-- -----------------------------------------------------
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (1,'Mariinsky theater', 'Nice theatre', 'Image', 8, '10:00:00', '20:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (2,'Doll theatre', 'Nice theatre', 'Image', 9,'10:00:00','18:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (3,'Modern theater', 'Nice theatre', 'Image', 12,'14:00:00','23:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (4,'Bolshoi theater', 'Nice theatre', 'Image', 18,'10:00:00','20:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (5,'Old theater', 'Nice theatre', 'Image', 23,'11:00:00','21:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (6,'Maly Theatre', 'Nice theatre', 'Image', 27,'09:00:00','22:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (7,'SALLE GAVEAU', 'Nice theatre', 'Image', 37,'11:00:00','22:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (8,'THEATRE MONTPARNASSE', 'Nice theatre', 'Image', 43,'10:00:00','23:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (9,'THEATRE RANELAGH', 'Nice theatre', 'Image', 38,'12:00:00','19:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (10,'Berliner Ensemble', 'Nice theatre', 'Image', 52,'11:00:00','20:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (11,'Berliner Kriminal Theater', 'Nice theatre', 'Image', 48,'19:00:00','04:00:00', 'phone');
INSERT INTO theatre(theatre_id, name, description, image, address_id, opens_at, closes_at, phone) VALUE (12,'Deutsches Theater Berlin', 'Nice theatre', 'Image', 56,'12:00:00','22:00:00', 'phone');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR play TABLE
-- -----------------------------------------------------
INSERT INTO play(play_id, name, description) VALUE (1,'Hamlet','Nice play');
INSERT INTO play(play_id, name, description) VALUE (2,'Oliver Twist', 'Nice play');
INSERT INTO play(play_id, name, description) VALUE (3,'Swan lake', 'Nice play');
INSERT INTO play(play_id, name, description) VALUE (4,'Cats', 'Nice play');
INSERT INTO play(play_id, name, description) VALUE (5,'At the bottom', 'Nice play');
INSERT INTO play(play_id, name, description) VALUE (6,'Cherry orchard', 'Nice play');

-- -----------------------------------------------------
-- INSERT STATMENTS FOR play_has_theatre TABLE
-- -----------------------------------------------------
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (1, 5, '2019-01-23', '2019-03-29', 1);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (1, 12, '2018-10-24', '2019-01-25', 2);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (1, 3, '2019-01-10', '2019-05-14', 4);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (2, 7, '2018-12-28', '2019-02-28', 3);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (2, 6, '2018-10-24', '2018-12-28', 1);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (2, 9, '2018-09-24', '2019-03-29', 2);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (3, 4, '2017-01-01', '2019-12-31', 1);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (3, 1, '2019-02-11', '2019-08-30', 1);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (3, 11, '2018-09-22', '2019-04-16', 1);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (4, 7, '2018-01-23', '2019-05-11', 4);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (4, 2, '2019-01-01', '2019-09-17', 4);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (4, 5, '2019-02-28', '2020-01-11', 4);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (5, 10, '2018-12-23', '2019-01-11', 2);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (5, 3, '2019-03-15', '2019-03-29', 1);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (5, 8, '2019-02-02', '2019-03-20', 3);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (6, 10, '2019-05-11', '2019-12-31', 2);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (6, 7, '2019-06-12', '2019-12-01', 3);
INSERT INTO play_has_theatre(play_id, theatre_id, starts_at, ends_at, language_id) VALUE (6, 9, '2019-03-01', '2019-05-30', 3);

-- -----------------------------------------------------
-- ------------------SELECT STATEMENTS------------------
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 1. Select restourants in Saint Petersburg with rating grater than 3.5
-- -----------------------------------------------------
SELECT r.name, r.opens_at, r.closes_at, r.description, r.phone, r.rate
	FROM restourant AS r 
		INNER JOIN address AS a ON r.address_id = a.address_id 
        INNER JOIN city AS c ON a.city_id = c.city_id
        INNER JOIN country AS cntr on c.country_id = cntr.country_id
			WHERE r.rate > 2 AND cntr.country_id = 1 AND c. city_id = 1
				ORDER BY r.rate DESC;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 2. Select top five countries with the longest rivers 
-- -----------------------------------------------------
SELECT c.name AS 'Country', r.name AS 'River', r.description, r.image, chr.length_in_country
	FROM river AS r
		INNER JOIN country_has_river AS chr ON r.river_id = chr.river_id
        RIGHT JOIN country AS c ON chr.country_id = c.country_id
			ORDER BY chr.length_in_country DESC
            LIMIT 5;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 3. Select cities which don't have any sights
-- -----------------------------------------------------
SELECT c.name AS 'Country', city.name AS 'City'
	FROM country AS c
		INNER JOIN city ON c.country_id = city.country_id
			WHERE city.city_id NOT IN (SELECT city.city_id FROM sights AS s
								INNER JOIN address AS a ON s.address_id = a.address_id
                                INNER JOIN city ON a.city_id = city.city_id
                                INNER JOIN country AS c ON c.country_id = city.country_id);
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 4. Select cities which have sights
-- -----------------------------------------------------
SELECT c.name AS 'Country', ct.name AS 'City'
	FROM country AS c
		INNER JOIN (SELECT city.country_id, city.name FROM sights AS s
								INNER JOIN address AS a ON s.address_id = a.address_id
                                INNER JOIN city ON a.city_id = city.city_id
									GROUP BY city.name) AS ct ON c.country_id = ct.country_id;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 5. Select hotels with rate more than 3 and theatres placed on one street 
-- -----------------------------------------------------
SELECT ha.name AS 'Hotel', ha.rate AS 'Hotel rating', ta.name AS 'Theatre', ha.street AS 'Street', ha.house AS 'Hotel house number', ta.house AS 'Theatre house number'
	FROM (SELECT a.address_id, a.street, a.house, a.city_id, h.name, h.rate
			FROM hotel AS h, address AS a WHERE h.address_id = a.address_id) AS ha 
		INNER JOIN (SELECT a.street, a.house, a.city_id, t.name
			FROM theatre AS t, address AS a WHERE t.address_id = a.address_id) AS ta ON ha.city_id = ta.city_id
            WHERE ta.street = ha.street
			GROUP BY ha.street HAVING ha.rate > 3;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 6. Select sights and museums
-- -----------------------------------------------------
(SELECT m.name, m.description, m.image, a.street, a.house, c.name
	FROM museum AS m, address AS a, city AS c
		WHERE m.address_id = a.address_id AND a.city_id = c.city_id) 
UNION
(SELECT s.name, s.description, s.image, a.street, a.house, c.name
	FROM sights AS s, address AS a, city AS c
		WHERE s.address_id = a.address_id AND a.city_id = c.city_id);    
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 7. Select cities with number of their sights
-- -----------------------------------------------------
SELECT cntr.name AS 'Country', c.name AS 'City', COUNT(s.sights_id) AS 'Number of sights'
	FROM city AS c, country AS cntr, address AS a, sights AS s
		WHERE c.country_id = cntr.country_id AND a.city_id = c.city_id AND s.address_id = a.address_id
			GROUP BY c.name;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 8. Select plays which goes today on German language
-- -----------------------------------------------------
SELECT cntr.name AS 'Country', c.name AS 'City', t.name AS 'Theatre',
		t.description AS 'Description', t.image AS 'Image', t.opens_at AS 'Opens at',
        t.closes_at AS 'Closes at', t.phone AS 'Phone', a.street AS 'Street',
        a.house AS 'House', p.name AS 'Play', p.description AS 'Play descripton', pht.starts_at AS 'Play starts', pht.ends_at AS 'Play ends'
	FROM city AS c, country AS cntr, address AS a, theatre AS t, play_has_theatre AS pht, play AS p, language AS l
		WHERE c.country_id = cntr.country_id AND a.city_id = c.city_id AND t.address_id = a.address_id AND t.theatre_id = pht.theatre_id AND p.play_id = pht.play_id AND pht.language_id = l.language_id AND l.name = 'German' AND pht.starts_at <= CURDATE() AND pht.ends_at >= CURDATE();
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 9. Select average hotel rating in cities
-- -----------------------------------------------------
SELECT cntr.name AS 'Country', c.name AS 'City', AVG(h.rate) AS 'Average hotel rating'
	FROM city AS c, country AS cntr, address AS a, hotel AS h
		WHERE c.country_id = cntr.country_id AND a.city_id = c.city_id AND h.address_id = a.address_id
			GROUP BY c.name
            ORDER BY AVG(h.rate) DESC;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 10. Select number of each language speakers in country
-- -----------------------------------------------------
SELECT cntr.name AS 'Cuntry', l.name AS 'Language', lhc.speakers AS 'Number of speakers'
	FROM country AS cntr, language AS l, language_has_country AS lhc
		WHERE cntr.country_id = lhc.country_id AND lhc.language_id = l.language_id
			ORDER BY lhc.speakers DESC;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 11. Select museums which are open now in Saint Petersburg
-- -----------------------------------------------------
SELECT m.name AS 'Museum', m.closes_at AS 'Closes at', m.description AS 'Description', m.image AS 'Image', a.street AS 'Street', a.house AS 'House'
	FROM museum AS m, address AS a
		WHERE m.address_id = a.address_id AND a.city_id = 1 AND m.opens_at <= CURTIME() AND m.closes_at > CURTIME(); 
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 12. Select distation between Saint Petersburg and other cities 
-- -----------------------------------------------------
SELECT cntr.name AS 'Country', c.name AS 'City', dbc.distance AS 'Distance'
	FROM city AS c, country AS cntr, distance_between_cities AS dbc
		WHERE dbc.city_city_id = 1 AND dbc.city_city_id1 = c.city_id AND c.country_id = cntr.country_id
			ORDER BY dbc.distance ASC;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- -------------DATA MODIFICATION OPERATORS-------------
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 1. Change Saint Petersburg population and area
-- -----------------------------------------------------
UPDATE city AS c SET c.population = 5000000, c.area = 1439 WHERE c.city_id = 1;
SELECT c.population, c.area FROM city AS c WHERE c.city_id = 1;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 2. Change theatre phone number if it's 'phone'
-- -----------------------------------------------------
UPDATE theatre AS t SET t.phone = CONCAT(FLOOR((RAND()*10000000+10000000))) WHERE t.phone = 'phone';
SELECT t.phone FROM theatre AS t;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 3. Delete 'roads' if they connect one city
-- -----------------------------------------------------
INSERT INTO distance_between_cities(city_city_id, city_city_id1, distance) VALUE (1,1,1212);
SELECT * FROM distance_between_cities;
DELETE FROM distance_between_cities
	WHERE city_city_id = city_city_id1;
SELECT * FROM distance_between_cities;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 4. Insert Chinese language
-- -----------------------------------------------------
INSERT INTO language(language_id, name)  SELECT MAX(language_id)+1, 'Chinese' FROM language; 
SELECT * FROM language;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- ------------------------VIEW-------------------------
-- -----------------------------------------------------

-- -----------------------------------------------------
-- View information about sights and their addresses
-- -----------------------------------------------------
CREATE VIEW view_sights_and_address  AS
	SELECT s.name, s.description, s.image, a.street, a.house, c.name AS city, cntr.name AS country
    FROM sights AS s, address AS a, city AS c, country AS cntr
		WHERE s.address_id = a.address_id AND a.city_id = c.city_id AND c.country_id = cntr.country_id;


-- -----------------------------------------------------

-- -----------------------------------------------------
-- Select sights ordered by Country
-- -----------------------------------------------------
SELECT * FROM view_sights_and_address ORDER BY country;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Drop view
-- -----------------------------------------------------
DROP VIEW view_sights_and_address;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- --------------INDEX CREATION OPERATORS---------------
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 1. Index that provides unique play name
-- -----------------------------------------------------
CREATE UNIQUE INDEX unique_play_name ON play (name);
DROP INDEX unique_play_name ON play;
-- -----------------------------------------------------

-- -----------------------------------------------------
-- 2. Multiple-column index
-- -----------------------------------------------------
CREATE INDEX street_house ON address (street, house);
-- -----------------------------------------------------


-- -----------------------------------------------------
-- -----------------------TRIGGER-----------------------
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Creates address_id before INSERT on address table
-- -----------------------------------------------------
SELECT * FROM address;

DELIMITER $$
CREATE TRIGGER tr_ins_address
BEFORE INSERT ON address
FOR EACH ROW 
BEGIN
	DECLARE varAddressId INTEGER;
    SELECT MAX(address_id)+1 INTO varAddressId FROM address;
    SET NEW.address_id = varAddressId;
END; $$
DELIMITER ; 

INSERT INTO address(street, house, city_id) VALUE('Botanicheskaya street', 11, 1);

SELECT * FROM address;
-- -----------------------------------------------------


-- -----------------------------------------------------
-- ----------------------PROCEDURE----------------------
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Insertes distance between cities
-- -----------------------------------------------------
SELECT * FROM distance_between_cities;

DROP PROCEDURE IF EXISTS AddDistanceBetweenCities;

DELIMITER $$
CREATE PROCEDURE AddDistanceBetweenCities (from_city_id INT, to_city_id INT, distance DOUBLE)
BEGIN
	IF NOT EXISTS (SELECT * FROM distance_between_cities WHERE (city_city_id = from_city_id AND city_city_id1 = to_city_id) OR (city_city_id1 = from_city_id AND city_city_id = to_city_id)) AND (from_city_id != to_city_id)
    THEN 
		INSERT INTO distance_between_cities(city_city_id, city_city_id1, distance) VALUE (from_city_id, to_city_id, distance);
    END IF;
END $$
DELIMITER ;

CALL AddDistanceBetweenCities (1,3,111);

DELETE FROM distance_between_cities WHERE city_city_id = 1 AND city_city_id1 = 3;
SELECT * FROM distance_between_cities;
-- -----------------------------------------------------